{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Business","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","toUpperCase","rating","reviewCount","React","Component","BusinessList","businesses","map","id","SearchBar","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","sortByOptions","sortByOption","setState","event","target","value","searchYelp","preventDefault","Object","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","renderSortByOptions","placeholder","onChange","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","zip_code","categories","title","review_count","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33e622a2.chunk.js","sourcesContent":["import React from 'react';\nimport './Business.css';\n\nclass Business extends React.Component {\n    render(){\n      return (\n        <div className=\"Business\">\n          <div className=\"image-container\">\n            <img src={this.props.business.imageSrc} alt=''/>\n          </div>\n          <h2>{this.props.business.name}</h2>\n          <div className=\"Business-information\">\n            <div className=\"Business-address\">\n              <p>{this.props.business.address}</p>\n              <p>{this.props.business.city}</p>\n              <p>{`${this.props.business.state} ${this.props.business.zipCode}`}</p>\n            </div>\n            <div className=\"Business-reviews\">\n              <h3>{this.props.business.category.toUpperCase()}</h3>\n              <h3 className=\"rating\">{this.props.business.rating} stars</h3>\n              <p>{`${this.props.business.reviewCount} reviews`}</p>\n            </div>\n          </div>\n        </div>\n        )\n      }\n    }\n\n    export default Business;\n","import React from 'react';\nimport './BusinessList.css';\n\nimport Business from '../Business/Business';\n\nclass BusinessList extends React.Component {\n  render(){\n    return(\n      <div className=\"BusinessList\">\n        {\n          this.props.businesses.map((business) => {\n          return <Business business={business} key={business.id}/>;\n        })\n        }\n      </div>\n    );\n  }\n}\n\nexport default BusinessList;\n","import React from 'react';\nimport './SearchBar.css';\n\n\n\nclass SearchBar extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: '',\n      location: '',\n      sortBy: 'best_match'\n    };\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.sortByOptions = {\n      'Best Match': 'best_match',\n      'Highest Rated': 'rating',\n      'Most Reviewed': 'review_count'\n    };\n  }\n\n  getSortByClass(sortByOption){\n  if (sortByOption === this.state.sortBy) {\n    return 'active';\n  }\n  return '';\n  }\n\n  handleSortByChange(sortByOption){\n    this.setState({ sortBy: sortByOption });\n  }\n\n  handleTermChange(event){\n    this.setState({term: event.target.value});\n  }\n\n  handleLocationChange(event){\n    this.setState({location: event.target.value});\n  }\n\n  handleSearch(event){\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n    event.preventDefault();\n  }\n\n  renderSortByOptions(){\n    return Object.keys(this.sortByOptions).map(sortByOption => {\n      let sortByOptionValue = this.sortByOptions[sortByOption];\n      return <li\n        key={sortByOptionValue}\n        className={this.getSortByClass(sortByOptionValue)}\n        onClick={this.handleSortByChange.bind(this, sortByOptionValue)}\n        >{sortByOption} </li>\n    });\n  }\n  render(){\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"SearchBar-sort-options\">\n          <ul>\n            {this.renderSortByOptions()}\n          </ul>\n        </div>\n        <div className=\"SearchBar-fields\">\n          <input placeholder=\"Search Businesses\" onChange={this.handleTermChange}/>\n          <input placeholder=\"Where?\" onChange={this.handleLocationChange}/>\n        </div>\n        <div className=\"SearchBar-submit\">\n          <a onClick={this.handleSearch}>Let's Go</a>\n        </div>\n      </div>\n)}\n};\n\nexport default SearchBar;\n","var apiKey = 'UiKvgVUX_Im5N315-v9ZVC5jF6RyJpFBhWfQy8KGpYARCh11V6ZN235-gudTKkCZo2lM6fudwZQC7vAqxy2gZ5dz1Z7TwMmWDsxD_LHqOvmg8wZDGAp8DBSzMmfWXnYx';\n\nvar Yelp = {\n\nsearch(term, location, sortBy){\n  return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\n  {headers: {\n    Authorization: `Bearer ${apiKey}`\n  }}).then(\n    (response) => {\n      return response.json()\n    }\n  ).then(\n    (jsonResponse) => {\n      if(jsonResponse.businesses){\n        return jsonResponse.businesses.map(((business) => {\n          return {\n            id: business.id,\n            imageSrc: business.image_url,\n            name: business.name,\n            address: business.location.address,\n            city: business.location.city,\n            state: business.location.state,\n            zipCode: business.location.zip_code,\n            category: business.categories[0].title,\n            rating: business.rating,\n            reviewCount: business.review_count,\n          };\n        }));\n      }\n    }\n  );\n}}\n\nexport default Yelp;\n","import React from 'react';\nimport './App.css';\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Yelp from '../../util/Yelp';\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state= {\n      businesses: [],\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(term, location, sortBy){\n    Yelp.search(term, location, sortBy).then((businesses) => {\n      this.setState({ businesses: businesses });\n    });\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp}/>\n        <BusinessList businesses={this.state.businesses}/>\n      </div>\n    )\n  }\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}